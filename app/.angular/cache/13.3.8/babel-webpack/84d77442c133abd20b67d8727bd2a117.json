{"ast":null,"code":"import { gql } from 'apollo-angular';\nimport { take, tap, pluck } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor(apollo) {\n      this.apollo = apollo;\n      this.foods = [];\n    }\n\n    filterData(valueToSearch) {\n      const QUERY_BY_NAME = gql`\n      query ($foodName: String) {\n        food(filter: { foodName: $foodName }) {\n          info {\n            count\n          }\n          results {\n            foodId: number;\n            foodName: string;\n            foodImg: string;\n            foodPrice: number;\n            foodDescription: string;\n            foodTime: number;\n            foodPreferences: string;\n            foodHealth: string;\n            tags: string[];\n      }\n        }\n      }`;\n      this.apollo.watchQuery({\n        query: QUERY_BY_NAME,\n        variables: {\n          foodName: valueToSearch\n        }\n      }).valueChanges.pipe(take(1), pluck('data', 'food'), tap(apiResponse => this.parseFoodData([...apiResponse.results]))).subscribe();\n    }\n\n    parseFoodData(food) {\n      food => {\n        return {\n          food\n        };\n      };\n    }\n\n  }\n\n  SearchService.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.Apollo));\n  };\n\n  SearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module"}